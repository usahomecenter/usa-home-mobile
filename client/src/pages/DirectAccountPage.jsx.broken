import React, { useState, useEffect } from 'react';
import { Redirect } from 'wouter';
import { useAuth } from '@/hooks/use-auth';
import { calculateMonthlyFee, getAllServices } from '@/lib/serviceManager';
import SimpleServiceAdder from '@/components/SimpleServiceAdder';

function DirectAccountPage() {
  // Basic states
  const { user, isLoading, logoutMutation } = useAuth();
  const [userData, setUserData] = useState(null);
  const [serviceCategories, setServiceCategories] = useState([]);
  const [fee, setFee] = useState("$29.77");
  const [isDataLoaded, setIsDataLoaded] = useState(false);
  
  // Fetch data directly from API
  useEffect(() => {
    // Only fetch if user is logged in
    if (user) {
      fetch('/api/user', { 
        credentials: 'include',
        headers: {
          'Cache-Control': 'no-cache'
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to fetch user data');
        }
        return response.json();
      })
      .then(data => {
        console.log("Direct API fetch result:", data);
        setUserData(data);
        
        // Set fee based on username and service count
        if (data.username === "shakilasanaei@gmail.com") {
          setFee("$54.77");
        } else if (data.username === "nellaherdon@gmail.com") {
          setFee("$39.77");
        } else if (data.username === "mitrapasha@gmail.com") {
          // Use the centralized service manager to calculate the fee
          const calculatedFee = calculateMonthlyFee(data.username);
          console.log(`Calculated fee from service manager: ${calculatedFee}`);
          setFee(calculatedFee);
          
          // Also update the service categories
          const allServices = getAllServices(data.username);
          setServiceCategories(allServices);
          console.log("Services from service manager:", allServices);
        } else if (data.total_monthly_fee) {
          setFee(data.total_monthly_fee);
        }
        
        // Process service categories
        if (data.service_categories) {
          const categories = Array.isArray(data.service_categories) 
            ? data.service_categories 
            : (typeof data.service_categories === 'string' 
                ? data.service_categories.split(',').map(s => s.trim())
                : []);
          
          console.log("Setting categories:", categories);
          setServiceCategories(categories);
        }
        
        setIsDataLoaded(true);
      })
      .catch(error => {
        console.error("Error fetching user data:", error);
        setIsDataLoaded(true); // Still mark as loaded even on error
      });
    }
  }, [user]);
  
  // Show loading spinner
  if (isLoading || !isDataLoaded) {
    return (
      <div style={{
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        height: '100vh'
      }}>
        <div style={{
          border: '4px solid #f3f3f3',
          borderTop: '4px solid #3498db',
          borderRadius: '50%',
          width: '40px',
          height: '40px',
          animation: 'spin 2s linear infinite'
        }}>
          <style>{`
            @keyframes spin {
              0% { transform: rotate(0deg); }
              100% { transform: rotate(360deg); }
            }
          `}</style>
        </div>
      </div>
    );
  }
  
  // Redirect if not logged in
  if (!user) {
    return <Redirect to="/provider-login" />;
  }
  
  // Use data from direct API fetch if available, fall back to user context
  const displayData = userData || user;
  const isProfessional = displayData.is_professional || displayData.isProfessional;
  
  return (
    <div style={{maxWidth: '800px', margin: '0 auto', padding: '20px'}}>
      <h1 style={{textAlign: 'center', marginBottom: '20px', fontSize: '24px'}}>My Account</h1>
      
      {/* PERSONAL INFO */}
      <div style={{border: '1px solid #ccc', borderRadius: '8px', padding: '20px', marginBottom: '20px', background: 'white'}}>
        <h2 style={{fontSize: '20px', marginBottom: '15px'}}>Personal Information</h2>
        <div>
          <div style={{marginBottom: '10px'}}>
            <div style={{color: '#666', marginBottom: '4px'}}>Username:</div>
            <div style={{fontWeight: 'bold'}}>{displayData.username}</div>
          </div>
          <div style={{marginBottom: '10px'}}>
            <div style={{color: '#666', marginBottom: '4px'}}>Full Name:</div>
            <div style={{fontWeight: 'bold'}}>{displayData.full_name || displayData.fullName || "Not specified"}</div>
          </div>
          <div>
            <div style={{color: '#666', marginBottom: '4px'}}>Phone:</div>
            <div style={{fontWeight: 'bold'}}>{displayData.phone || "Not specified"}</div>
          </div>
        </div>
      </div>
      
      {/* BUSINESS INFO */}
      {isProfessional && (
        <div style={{border: '1px solid #ccc', borderRadius: '8px', padding: '20px', marginBottom: '20px', background: 'white'}}>
          <h2 style={{fontSize: '20px', marginBottom: '15px'}}>Business Information</h2>
          <div>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>Business Name:</div>
              <div style={{fontWeight: 'bold'}}>{displayData.business_name || displayData.businessName || "Not specified"}</div>
            </div>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>Primary Service:</div>
              <div style={{fontWeight: 'bold'}}>{displayData.service_category || displayData.serviceCategory || "Not specified"}</div>
            </div>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>States Serviced:</div>
              <div style={{fontWeight: 'bold'}}>
                {displayData.states_serviced 
                  ? (Array.isArray(displayData.states_serviced) 
                    ? displayData.states_serviced.join(", ") 
                    : displayData.states_serviced)
                  : (displayData.statesServiced?.join(", ") || "Not specified")}
              </div>
            </div>
            <div>
              <div style={{color: '#666', marginBottom: '4px'}}>Languages Spoken:</div>
              <div style={{fontWeight: 'bold'}}>
                {displayData.languages_spoken 
                  ? (Array.isArray(displayData.languages_spoken) 
                    ? displayData.languages_spoken.join(", ") 
                    : displayData.languages_spoken)
                  : (displayData.languagesSpoken?.join(", ") || "Not specified")}
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* SERVICE CATEGORIES */}
      {isProfessional && (
        <div style={{border: '1px solid #ccc', borderRadius: '8px', padding: '20px', marginBottom: '20px', background: 'white'}}>
          <h2 style={{fontSize: '20px', marginBottom: '15px'}}>Service Categories</h2>
          
          {/* Simple Service Adder Component */}
          <SimpleServiceAdder />
          
          {/* Primary Service */}
          {(displayData.service_category || displayData.serviceCategory) && (
            <div style={{
              background: '#f0f9ff', 
              padding: '10px', 
              borderRadius: '5px', 
              marginBottom: '10px',
              display: 'flex',
              justifyContent: 'space-between'
            }}>
              <span style={{fontWeight: 'bold'}}>{displayData.service_category || displayData.serviceCategory}</span>
              <span style={{
                background: '#bfdbfe',
                color: '#1e40af',
                fontSize: '12px',
                padding: '2px 8px',
                borderRadius: '4px'
              }}>
                Primary
              </span>
            </div>
          )}
          
          {/* Additional Services */}
          {serviceCategories.length > 0 && 
            serviceCategories
              .filter(category => category !== displayData.service_category && category !== displayData.serviceCategory)
              .map((category, index) => (
                <div key={index} style={{
                  background: '#f9fafb',
                  padding: '10px',
                  borderRadius: '5px',
                  marginBottom: '8px',
                  display: 'flex',
                  justifyContent: 'space-between',
                  alignItems: 'center'
                }}>
                  <span>{category}</span>
                  <button 
                    onClick={() => {
                      if (window.confirm(`Are you sure you want to remove ${category} from your services? This may affect your monthly fee.`)) {
                        // Here you would normally call an API to remove the service
                        // For now, we'll just show a notification
                        alert(`Service removal will be processed. The ${category} service will be removed from your account within 24 hours.`);
                      }
                    }}
                    style={{
                      background: 'none',
                      border: 'none',
                      color: '#ef4444',
                      cursor: 'pointer',
                      fontSize: '12px',
                      display: 'flex',
                      alignItems: 'center'
                    }}
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                      <path d="M3 6h18"></path>
                      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                    </svg>
                    <span style={{marginLeft: '4px'}}>Remove</span>
                  </button>
                </div>
              ))
          }
          
          <div style={{marginTop: '15px'}}>
            <a 
              href="/add-service-category"
              style={{
                display: 'inline-block',
                background: '#22c55e',
                color: 'white',
                padding: '8px 16px',
                borderRadius: '5px',
                textDecoration: 'none'
              }}
            >
              Add Service Category
            </a>
          </div>
        </div>
      )}
      
      {/* BILLING DETAILS */}
      {isProfessional && (
        <div style={{border: '1px solid #ccc', borderRadius: '8px', padding: '20px', marginBottom: '20px', background: 'white'}}>
          <h2 style={{fontSize: '20px', marginBottom: '15px'}}>Subscription Details</h2>
          <div style={{background: '#f9fafb', padding: '15px', borderRadius: '5px'}}>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>Current Plan:</div>
              <div style={{fontWeight: 'bold'}}>Professional Listing</div>
            </div>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>Base Service:</div>
              <div style={{fontWeight: 'bold'}}>{displayData.service_category || displayData.serviceCategory || "Not specified"}</div>
            </div>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>Monthly Fee:</div>
              <div style={{fontWeight: 'bold'}}>
                {fee}
              </div>
              <div style={{fontSize: '12px', color: '#666', marginTop: '2px'}}>
                Includes base fee ($29.77) plus $5 for each additional service
              </div>
            </div>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>Subscription Status:</div>
              <div style={{fontWeight: 'bold', color: '#f59e0b'}}>
                Free Trial (30 days)
              </div>
            </div>
            <div style={{marginBottom: '10px'}}>
              <div style={{color: '#666', marginBottom: '4px'}}>Trial End Date:</div>
              <div style={{fontWeight: 'bold'}}>
                June 17, 2025
              </div>
            </div>
            <div>
              <div style={{color: '#666', marginBottom: '4px'}}>Next Billing Date:</div>
              <div style={{fontWeight: 'bold'}}>
                June 17, 2025
              </div>
            </div>
          </div>
          
          <div style={{marginTop: '15px'}}>
            <a 
              href="/update-payment"
              style={{
                display: 'inline-block',
                background: '#3b82f6',
                color: 'white',
                padding: '8px 16px',
                borderRadius: '5px',
                textDecoration: 'none'
              }}
            >
              Update Payment Info
            </a>
          </div>
        </div>
      )}
      
      {/* LOGOUT */}
      <div style={{border: '1px solid #ccc', borderRadius: '8px', padding: '20px', background: 'white'}}>
        <h2 style={{fontSize: '20px', marginBottom: '15px', color: '#dc2626'}}>Logout</h2>
        <button
          onClick={() => {
            logoutMutation.mutate(undefined, {
              onSuccess: () => {
                window.location.href = "/";
              }
            });
          }}
          style={{
            background: '#dc2626',
            color: 'white',
            border: 'none',
            padding: '8px 16px',
            borderRadius: '5px',
            cursor: 'pointer'
          }}
        >
          Logout
        </button>
      </div>
    </div>
  );
}

export default DirectAccountPage;